package example1;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;

public class Demo1 {

	public static void main(String[] args) {

		// this is called a generic interface
		List li=new LinkedList();
		li.add("dsfhds");
		li.add(23.44);
		li.add(99);
		li.add(true);
		li.add('c');
		System.out.println(li);
		
		List<Integer> li2 = new LinkedList<>();
		// li2.add("dsfsdf") - error because type conflict
		li2.add(123);
		li2.add(123);
		li2.add(4555);
		li2.add(1233);
		li2.add(999);
		li2.add(null);
		li2.add(null);
		li2.add(23);
		li2.add(44);
		li2.add(123);
		System.out.println(li2);
		
		// first number becomes position
		li2.add(2,9);
		System.out.println(li2);
		// How big is the collection??
		System.out.println(li2.size());
		
		li2.set(0,  1000);
		System.out.println(li2);
		
		// remove by position!! - sees this a INDEX
		//li2.remove(1000); // error because out of bounds
		
		// remove(Object) - the first encountered
		Integer i=1000;
		li2.remove(i);
		System.out.println(li2);
		
		// remove(position)
		li2.remove(7); // remove by position
		System.out.println(li2);
		
		// removes all occurences of object i2 ?!?!?!?!?!?!?!
		Integer i2=123;
		while(li2.remove(i2)) {};
		System.out.println(li2);
		
		// get index
		System.out.println(li2.get(0));
		
		// return each list item
		for (int j = 0; j < li2.size(); j++) {
			System.out.println(li2.get(j));
		}
		
		
		List<Integer> li3=new ArrayList<>(li2);
		System.out.println("li3 is::: "+li3);
		li3.addAll(li2);
		System.out.println(li3);
		
		

	}

}
